{"version":3,"sources":["components/layout/Header.module.css","components/layout/Layout.module.css","hooks/use-input.js","components/BasicForm.js","pages/form.js","pages/user-detail.js","components/layout/Header.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","useInput","validateValue","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","BasicForm","navigate","useNavigate","trim","enteredFirstName","enteredFirstNameIsValid","firstNameInputHasError","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","enteredLastName","enteredLastNameIsValid","lastNameInputHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredCompany","enteredCompanyIsValid","companyInputHasError","companyChangeHandler","companyBlurHandler","resetCompany","enteredDate","enteredDateIsValid","dateInputHasError","dateChangeHandler","dateBlurHandler","resetDate","enteredOccupation","enteredOccupationIsValid","occupationInputHasError","occupationChangeHandler","occupationBlurHandler","resetOccupation","formIsValid","firstNameInputClasses","lastNameInputClasses","companyInputClasses","dateInputClasses","occupationInputClasses","onSubmit","preventDefault","dob","Date","month_diff","now","getTime","year","getUTCFullYear","age","Math","abs","console","log","fetch","method","body","JSON","stringify","firstName","lastName","company","date","occupation","headers","then","response","catch","error","message","alert","className","htmlFor","type","id","onChange","onBlur","form","Detail","props","daata","setFirstname","setlastname","setCompany","setage","setOccupation","fetched","setIsFetched","clickHandler","json","key","data","ida","push","length","style","textAlign","onClick","fontWeight","marginTop","fontFamily","fontSize","Header","classes","header","logo","Layout","main","children","App","path","element","replace","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.071c138f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__365PT\",\"logo\":\"Header_logo__3BgzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__B-9sr\"};","import {useState} from 'react';\r\nconst useInput=(validateValue)=>{\r\n    const [enteredValue,setEnteredValue]=useState('');\r\n    const [isTouched,setIsTouched]=useState(false);\r\n    const valueIsValid=validateValue(enteredValue);\r\n    const hasError=!valueIsValid && isTouched;\r\n    const valueChangeHandler=event=>{\r\n        setEnteredValue(event.target.value);\r\n    };\r\n    const inputBlurHandler=event=>{\r\n        setIsTouched(true);\r\n    };\r\n    const reset=()=>{\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    };\r\n    return{\r\n        value:enteredValue,\r\n        isValid:valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n}  \r\nexport default useInput;","import useInput from \"../hooks/use-input\";\nimport { useNavigate } from \"react-router-dom\";\nconst BasicForm = () => {\n  const navigate = useNavigate();\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredCompany,\n    isValid: enteredCompanyIsValid,\n    hasError: companyInputHasError,\n    valueChangeHandler: companyChangeHandler,\n    inputBlurHandler: companyBlurHandler,\n    reset: resetCompany,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredDate,\n    isValid: enteredDateIsValid,\n    hasError: dateInputHasError,\n    valueChangeHandler: dateChangeHandler,\n    inputBlurHandler: dateBlurHandler,\n    reset: resetDate,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredOccupation,\n    isValid: enteredOccupationIsValid,\n    hasError: occupationInputHasError,\n    valueChangeHandler: occupationChangeHandler,\n    inputBlurHandler: occupationBlurHandler,\n    reset: resetOccupation,\n  } = useInput((value) => value.trim() !== \"\");\n  let formIsValid = false;\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredCompanyIsValid && enteredDateIsValid && enteredOccupationIsValid)  {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!formIsValid) {\n      alert(\"Kindly Fill all the Form fields...\");\n      return;\n    }\n    var dob = new Date(enteredDate);\n    var month_diff = Date.now() - dob.getTime();\n    var age_dt = new Date(month_diff); \n    var year = age_dt.getUTCFullYear();\n    var age = Math.abs(year - 1970);\n    console.log(enteredFirstName, enteredLastName, enteredCompany);\n    fetch(\"https://users-8c704-default-rtdb.firebaseio.com/users.json\",\n    {\n      method:\"POST\",\n      body:JSON.stringify({\n        firstName:enteredFirstName,\n        lastName:enteredLastName,\n        company:enteredCompany,\n        date:age,\n        occupation:enteredOccupation\n        }),\n      headers:{\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    ).then(response=>{\n      console.log(response);\n      resetFirstName();\n      resetLastName();\n      resetCompany();\n      resetDate();\n      resetOccupation();\n    }\n    ).catch(error=>{\n      console.log(error.message);\n    }\n    );\n    navigate(\"/user-detail\");\n  };\n  const firstNameInputClasses = firstNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameInputClasses = lastNameInputHasError\n\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const companyInputClasses = companyInputHasError\n\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const dateInputClasses = dateInputHasError\n\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const occupationInputClasses = occupationInputHasError\n\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='control-group'>\n        <div className={firstNameInputClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onChange={firstNameChangeHandler} onBlur={firstNameBlurHandler} value={enteredFirstName}/>\n          {!firstNameInputHasError? null : <p className='error-text'>First Name must not be empty</p>}\n\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' onChange={lastNameChangeHandler} onBlur={lastNameBlurHandler} value={enteredLastName}/>\n          {!lastNameInputHasError? null : <p className='error-text'>Last Name must not be empty</p>}\n        </div>\n      \n      <div className={companyInputClasses}>\n        <label htmlFor='name'>Comapny</label>\n        <input type='text' id='name' onChange={companyChangeHandler} onBlur={companyBlurHandler} value={enteredCompany}/>\n        {!companyInputHasError? null : <p className='error-text'>Company name must not be empty</p>}\n      </div>\n      <div className={dateInputClasses}>\n        <label htmlFor='name'>Date of birth</label>\n        <input type='date' id='name' onChange={dateChangeHandler} onBlur={dateBlurHandler} value={enteredDate}/>\n        {!dateInputHasError? null : <p className='error-text'>Date must not be empty</p>}\n      </div>\n      <div className={occupationInputClasses}>\n        <label htmlFor='name'>Occupation</label>\n        <input type='text' id='name' onChange={occupationChangeHandler} onBlur={occupationBlurHandler} value={enteredOccupation}/>\n        {!occupationInputHasError? null : <p className='error-text'>Occupation must not be empty</p>}\n      </div>\n      </div>\n      <div className='form-actions'>\n        {/* <Link to=\"/user-details\" >submit</Link> */}\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\n\nexport default BasicForm;\n","import BasicForm from \"../components/BasicForm\";\r\nconst form=()=>{\r\n    return(\r\n        <div>\r\n            <BasicForm />\r\n        </div>\r\n    )\r\n}\r\nexport default form;\r\n","import { useState} from \"react\";\r\nconst Detail = (props) => {\r\n  const [firstName,setFirstname]=useState(\"\");\r\n  const [lastName,setlastname]=useState(\"\");\r\n  const [company,setCompany]=useState(\"\");\r\n  const [age,setage]=useState(\"\");\r\n  const [occupation,setOccupation]=useState(\"\");\r\n  let daata;\r\n  const [fetched, setIsFetched] = useState(false);\r\n  const clickHandler = async () => {\r\n    const response = await fetch(\r\n      \"https://users-8c704-default-rtdb.firebaseio.com/users.json\"\r\n    );\r\n    const data = await response.json();\r\n    const ida = [];\r\n    for (const key in data) {\r\n      ida.push({\r\n        id: key,\r\n        firstName: data[key].firstName,\r\n        lastName: data[key].lastName,\r\n        company: data[key].company,\r\n        age: data[key].date,\r\n        occupation: data[key].occupation,\r\n      });\r\n    }\r\n    daata=ida[ida.length-1];\r\n    setFirstname(daata.firstName);\r\n    setlastname(daata.lastName);\r\n    setCompany(daata.company);\r\n    setOccupation(daata.occupation);\r\n    setage(daata.age);\r\n    setIsFetched(true);\r\n  };\r\n    console.log(props.data)\r\n  return (\r\n    <div style={{textAlign:\"center\"}}>\r\n      <button onClick={clickHandler} style={{fontWeight:\"500\"}}> See Your entered Details..</button>\r\n      {fetched ?<p style={{marginTop:\"43px\",fontWeight:\"600\",fontFamily:\"revert-layer\",fontSize:\"1.25rem\"}}>{firstName} {lastName} is {age} years old and working as a {occupation} in {company} </p>: \"\"}\r\n    </div>\r\n  );\r\n};\r\nexport default Detail;\r\n","import classes from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n        <div className={classes.logo}>Welcome to Foozd!!!!</div>\r\n        </header>\r\n    );\r\n    }\r\n\r\nexport default Header;","import classes from \"./Layout.module.css\";\r\nimport Header from \"./Header\";\r\nfunction Layout(props) {\r\n    return (\r\n        <div>\r\n        <Header />\r\n        <main className={classes.main}>{props.children}</main>\r\n        </div>\r\n    );\r\n    }\r\nexport default Layout;","import {Routes,Route,Navigate} from 'react-router-dom';\nimport Form from './pages/form';\nimport Detail from './pages/user-detail';\nimport Layout from './components/layout/Layout';\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Layout>\n      <Routes>\n      <Route path=\"/\" element={<Navigate replace to=\"/form\" />} />\n      <Route path=\"/form\" element={<Form />}/>\n      <Route path=\"/user-detail\" element={<Detail/>}/>\n      </Routes>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}